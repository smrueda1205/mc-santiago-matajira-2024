# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1U_lbAyiGS-VQqqhubRythxfmz9CBptMe
"""

def lagrange_interpolation(x, y, x_eval):
    n = len(x)
    result = 0
    for i in range(n):
        term = y[i]
        for j in range(n):
            if j != i:
                term *= (x_eval - x[j]) / (x[i] - x[j])
        result += term
    return result

# Datos
x = [0, 2, 4, 6, 8]
y = [2, 0.1, 3, 4.5, 7]
x_eval = 2.75

# Polinomio de interpolación de Lagrange de grado 1
poly_degree_1 = lagrange_interpolation(x[:2], y[:2], x_eval)

# Polinomio de interpolación de Lagrange de grado 2
poly_degree_2 = lagrange_interpolation(x[:3], y[:3], x_eval)

# Estimación de f(2.75) para los grados 1, 2 y 3
poly_degree_3 = lagrange_interpolation(x[:4], y[:4], x_eval)

print("Estimación de f(2.75) para polinomio de grado 1:", poly_degree_1)
print("Estimación de f(2.75) para polinomio de grado 2:", poly_degree_2)
print("Estimación de f(2.75) para polinomio de grado 3:", poly_degree_3)