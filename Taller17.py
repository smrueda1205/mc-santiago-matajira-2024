# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yj31-N8PG60Tv-s--1jNa9LW_mlb39Dl
"""

import numpy as np
import matplotlib.pyplot as plt

# Datos proporcionados
X = np.array([1, 2, 3, 4, 5, 6, 7, 8])
y = np.array([9, 7, 8, 5, 6, 4.5, 4, 2.5])

# Función para calcular la regresión lineal
def linear_regression(X, y):
    n = len(X)
    sum_x = np.sum(X)
    sum_y = np.sum(y)
    sum_xy = np.sum(X * y)
    sum_x_squared = np.sum(X ** 2)

    # Calculando los coeficientes de la regresión lineal
    m = (n * sum_xy - sum_x * sum_y) / (n * sum_x_squared - sum_x ** 2)
    b = (sum_y - m * sum_x) / n

    return m, b

# Obteniendo los coeficientes de la regresión lineal
m, b = linear_regression(X, y)

# Imprimiendo los coeficientes
print("Coeficiente de pendiente (m):", m)
print("Coeficiente de intersección (b):", b)

# Haciendo las predicciones
y_pred = m * X + b

# Graficando los datos y la línea de regresión
plt.scatter(X, y, color='blue', label='Datos')
plt.plot(X, y_pred, color='red', label='Línea de Regresión')
plt.xlabel('X')
plt.ylabel('y')
plt.title('Regresión Lineal por Mínimos Cuadrados')
plt.legend()
plt.grid(True)
plt.show()